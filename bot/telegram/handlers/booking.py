from aiogram import Router, F
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

router = Router()

class BookingForm(StatesGroup):
    waiting_for_name = State()
    waiting_for_phone = State()
    waiting_for_description = State()

@router.message(F.text == "üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")
async def booking_start(message: Message, state: FSMContext):
    print("üî• –ö–Ω–æ–ø–∫–∞ '–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É' —Å—Ä–∞–±–æ—Ç–∞–ª–∞")
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
    await state.set_state(BookingForm.waiting_for_name)

@router.message(BookingForm.waiting_for_name)
async def booking_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    await state.set_state(BookingForm.waiting_for_phone)

@router.message(BookingForm.waiting_for_phone)
async def booking_phone(message: Message, state: FSMContext):
    await state.update_data(phone=message.text)
    await message.answer("–û–ø–∏—à–∏—Ç–µ, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞–º –Ω—É–∂–Ω–æ:")
    await state.set_state(BookingForm.waiting_for_description)

@router.message(BookingForm.waiting_for_description)
async def booking_description(message: Message, state: FSMContext):
    user_data = await state.get_data()
    description = message.text
    await state.clear()
    await message.answer(
        "‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!\n\n"
        f"–ò–º—è: {user_data['name']}\n"
        f"–¢–µ–ª–µ—Ñ–æ–Ω: {user_data['phone']}\n"
        f"–û–ø–∏—Å–∞–Ω–∏–µ: {description}"
    )
